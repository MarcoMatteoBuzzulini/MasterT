{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red254\green244\blue139;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c99608\c95686\c61176;\csgenericrgb\c100000\c100000\c100000;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww14160\viewh18000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 \CocoaLigature0 		-	 Monte Carlo one option pricing with CUDA   -\
\
-	Option price with Black & Scholes: 4.854926  -\
\
-	Amount of simulations: 2560000	-\
\
-	Running Monte Carlo within GPU:	-\
Parallel parameters: 64 Blocks, 512 Threads with a path of 40000 interactions per block\
Monte Carlo simulation done!	It takes 12.871872 milliseconds.\
\
	The price is: \'804.851283 with confidence 95%: 4.842103 - 4.860463\
\
The difference from the Black-Scholes formula is: \'80 0.003643\
\
\
-	Running Monte Carlo within CPU:	-\
Monte Carlo simulation done!	It takes 589.046021 milliseconds.\
\
	The price is: \'804.857220 with confidence 95%: 4.848025 - 4.866415\
\
The difference from Black-Scholes formula is: \'80 0.002294\
\
\
-	Comparing results:	-\
The GPU runs the Monte Carlo simulation 4476.23 % faster.\
\
\cb4 \
\cb3 zanette@kepler:~/cuda_programs/oneOptionPricing$ ./launcher\
\
		-	 Monte Carlo one option pricing with CUDA -\
\
-	Option price with Black & Scholes: 4.854926 -\
\
-	Amount of simulations: 5120000	-\
\
\
-	Running Monte Carlo within GPU:	-\
Parallel parameters: 128 Blocks, 512 Threads with a path of 40000 interactions per block\
Monte Carlo simulation done!	It takes 14.604480 milliseconds.\
\
	The price is: \'804.851394 with confidence 95%: 4.844899 - 4.857889\
\
The difference from the Black-Scholes formula is: \'80 0.003533\
\
\
-	Running Monte Carlo within CPU:	-\
Monte Carlo simulation done!	It takes 1066.064941 milliseconds.\
\
	The price is: \'804.854343 with confidence 95%: 4.847848 - 4.860838\
\
The difference from Black-Scholes formula is: \'80 0.000583\
\
\
-	Comparing results:	-\
The GPU runs the Monte Carlo simulation 7199.58 % faster.\
\
\cb4 			\
\cb3 zanette@kepler:~/cuda_programs/oneOptionPricing$ ./launcher\
\
		-	 Monte Carlo one option pricing with CUDA -\
\
-	Option price with Black & Scholes: 4.854926 -\
\
-	Amount of simulations: 10240000	-\
\
\
-	Running Monte Carlo within GPU:	-\
Parallel parameters: 256 Blocks, 512 Threads with a path of 40000 interactions per block\
Monte Carlo simulation done!	It takes 24.702656 milliseconds.\
\
	The price is: \'804.856670 with confidence 95%: 4.852075 - 4.861265\
\
The difference from the Black-Scholes formula is: \'80 0.001744\
\
\
-	Running Monte Carlo within CPU:	-\
Monte Carlo simulation done!	It takes 2087.926025 milliseconds.\
\
	The price is: \'804.856032 with confidence 95%: 4.851437 - 4.860628\
\
The difference from Black-Scholes formula is: \'80 0.001106\
\
\
-	Comparing results:	-\
The GPU runs the Monte Carlo simulation 8352.23 % faster.\
\
\cb4 \
\cb3 zanette@kepler:~/cuda_programs/oneOptionPricing$ ./launcher\
\
		-	 Monte Carlo one option pricing with CUDA  -\
\
-	Option price with Black & Scholes: 4.854926 -\
\
-	Amount of simulations: 10240000	-\
\
\
-	Running Monte Carlo within GPU:	-\
Parallel parameters: 256 Blocks, 1024 Threads with a path of 40000 interactions per block\
Monte Carlo simulation done!	It takes 50.389378 milliseconds.\
\
	The price is: \'804.854821 with confidence 95%: 4.850228 - 4.859413\
\
The difference from the Black-Scholes formula is: \'80 0.000106\
\
\
-	Running Monte Carlo within CPU:	-\
Monte Carlo simulation done!	It takes 2096.016846 milliseconds.\
\
	The price is: \'804.856135 with confidence 95%: 4.851541 - 4.860729\
\
The difference from Black-Scholes formula is: \'80 0.001209\
\
\
-	Comparing results:	-\
The GPU runs the Monte Carlo simulation 4059.64 % faster.\
\
\cb4 \
\cb3 zanette@kepler:~/cuda_programs/oneOptionPricing$ ./launcher\
\
		-	 Monte Carlo one option pricing with CUDA 	-\
\
-	Parallel computing parameters:	-\
Be careful! These parameters will run even on the CPU (blocks * operations)\
Digit the number of blocks: 512\
Digit the number of threads: 1024\
Digit how many operations: 40000\
\
\
-	Option price with Black & Scholes: 4.854926	-\
\
-	Amount of simulations: 20480000	-\
\
\
-	Running Monte Carlo within GPU:	-\
Parallel parameters: 512 Blocks, 1024 Threads with a path of 40000 interactions per block\
Monte Carlo simulation done!	It takes 90.198563 milliseconds.\
\
	The price is: \'804.853394 with confidence 95%: 4.850146 - 4.856641\
\
The difference from the Black-Scholes formula is: \'80 0.001533\
\
\
-	Running Monte Carlo within CPU:	-\
Monte Carlo simulation done!	It takes 3898.641113 milliseconds.\
\
	The price is: \'804.857372 with confidence 95%: 4.854122 - 4.860622\
\
The difference from Black-Scholes formula is: \'80 0.002445\
\
\
-	Comparing results:	-\
The GPU runs the Monte Carlo simulation 4222.29 % faster.\
\
}